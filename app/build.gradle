apply plugin: 'com.android.application'
apply plugin: 'channel'

//int MILLIS_IN_MINUTE = 1000 * 60
//int minutesSinceEpoch = System.currentTimeMillis() / MILLIS_IN_MINUTE

android {
    compileSdkVersion versions.compileSdk

    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }

    defaultConfig {
        applicationId "com.wptdxii.java.playground"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue "string", "app_name", "@string/app_name_prod"
        buildConfigField "String", "BASE_URL_GANK", "\"${BASE_URL_GANK}\""
        buildConfigField "String", "BASE_URL_DOUBAN", "\"${BASE_URL_DOUBAN}\""
    }

//    applicationVariants.all { variant ->
//        if (variant.buildType.name == "release") {
//            variant.mergedFlavor.versionCode = minutesSinceEpoch
//            variant.mergedFlavor.versionName = minutesSinceEpoch + "-" + variant.flavorName
//        }
//    }

    signingConfigs {
        config {
            storeFile file(signings.storeFile)
            storePassword signings.storePassword
            keyAlias signings.keyAlias
            keyPassword signings.keyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            signingConfig signingConfigs.config
            manifestPlaceholders = [appName: "JPlayground.Debug"]
        }

        release {
            signingConfig signingConfigs.config
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "buildType"
    productFlavors {

        dev {
            dimension "buildType"
            versionNameSuffix "-dev"
            applicationIdSuffix = ".dev"
            resConfigs "xxhdpi"
            resValue "string", "app_name", "@string/app_name_prod"
        }

        prod {
            dimension "buildType"
        }

    }

    variantFilter { variant ->
        if ('release' == variant.buildType.name
                && 'dev' == variant.getFlavors().get(0).name) {
            variant.setIgnore(true)
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "Playground-v${variant.versionName}.apk"
        }
    }

    // for VasDolly
    channel {
        channelFile = file(tools.channelFile)
        apkNameFormat = 'Playground-v${versionName}-${flavorName}-${buildType}'
        isFastMode = false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':sdk:framekit')
    implementation supports.cardView

    implementation di.butterknife
    annotationProcessor di.butterknifeCompiler

    annotationProcessor di.daggerCompiler
    annotationProcessor di.daggerAndroidCompiler

    implementation aac.roomRuntime
    implementation aac.roomRxJavaAdapter
    annotationProcessor aac.roomCompiler
//    testImplementation aac.roomTest

    testImplementation testings.junit
    androidTestImplementation testings.runner
    androidTestImplementation testings.espresso

    implementation tools.vasdolly
    implementation tools.permission
}
